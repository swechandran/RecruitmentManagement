@model IEnumerable<RecruitmentManagement.Models.JobPosting>
@{
    ViewBag.Title = "Job Postings";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>Job Postings</h2>

<div class="action-bar">
    @Html.ActionLink("Create New", "Create", "Job", new { }, new { @class = "btn btn-success create-button" })
</div>

<style>
    
    .table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 16px;
        color: #333;
    }

        .table th, .table td {
            padding: 12px;
            text-align: left;
            border: 1px solid #ddd;
        }

        .table thead {
            background-color: #f2f2f2;
        }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f9f9f9;
    }

    .table-bordered {
        border: 1px solid #ddd;
    }

    .table th {
        background-color: #4CAF50;
        color: white;
    }

    
    .btn {
        text-decoration: none;
        padding: 5px 8px; 
        border-radius: 4px;
        color: white;
        border: none;
        cursor: pointer;
        font-size: 14px; 
        margin-right: 5px;
        margin-bottom:10px;
        display:block;
    }

    .btn-primary {
        background-color: #007bff;

    }

    .btn-danger {
        background-color: #dc3545;
    }

    .btn-success {
        background-color: #28a745;
    }

    
    .action-bar {
        display: flex;
        justify-content: flex-end;
        margin-bottom: 15px;
    }

   
    .img-thumbnail {
        border-radius: 4px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    
    .create-button {
        background-color: #28a745;
        padding: 10px 20px;
        font-size: 16px;
    }
</style>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().JobTitle)</th>
            <th>@Html.DisplayNameFor(model => model.First().JobDescription)</th>
            <th>@Html.DisplayNameFor(model => model.First().JobLocation)</th>
            <th>@Html.DisplayNameFor(model => model.First().Department)</th>
            <th>@Html.DisplayNameFor(model => model.First().PostedDate)</th>
            <th>@Html.DisplayNameFor(model => model.First().NumberOfVacancy)</th>
            <th>@Html.DisplayNameFor(model => model.First().InterviewMode)</th>
            <th>@Html.DisplayNameFor(model => model.First().LastDateToRegister)</th>
            <th>@Html.DisplayNameFor(model => model.First().JobPosterImage)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.JobTitle)</td>
                <td>@Html.DisplayFor(modelItem => item.JobDescription)</td>
                <td>@Html.DisplayFor(modelItem => item.JobLocation)</td>
                <td>@Html.DisplayFor(modelItem => item.Department)</td>
                <td>@item.PostedDate.ToString("yyyy/MM/dd")</td>
                <td>@item.NumberOfVacancy</td>
                <td>@item.InterviewMode</td>
                <td>@item.LastDateToRegister.ToString("yyyy/MM/dd")</td>
                <td>
                    @if (item.JobPosterImage != null && item.JobPosterImage.Length > 0)
                    {
                        var imageBase64 = Convert.ToBase64String(item.JobPosterImage);
                        <img src="@($"data:image/jpeg;base64,{imageBase64}")" class="img-thumbnail" alt="Job Poster Image" width="50" height="50" />
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.JobID }, new { @class = "btn btn-primary" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.JobID }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>
