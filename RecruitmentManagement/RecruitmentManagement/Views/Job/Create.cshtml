@model RecruitmentManagement.Models.JobPosting

@{
    ViewBag.Title = "Create Job Posting";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<style>
/*    body {
        font-family: 'Poppins', sans-serif;
        background: linear-gradient(to right, #6a11cb, #2575fc); 
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
    }*/

    .job-form-container {
        background-color: #fff;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        width: 100%;
        margin: 20px auto;
    }

    h2 {
        text-align: center;
        color: #333;
        margin-bottom: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 5px;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        font-size: 1rem;
        border-radius: 5px;
        border: 1px solid #ddd;
        box-sizing: border-box;
    }

        .form-control:focus {
            border-color: #2575fc;
            box-shadow: 0 0 5px rgba(37, 117, 252, 0.5);
        }

    .text-danger {
        color: red;
        font-size: 0.875rem;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
    }

    .btn {
        padding: 10px 20px;
        font-size: 1rem;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-primary {
        background-color: #2575fc;
        color: white;
    }

        .btn-primary:hover {
            background-color: #1e63d0;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
    }

        .btn-secondary:hover {
            background-color: #5a636d;
        }

    input[type="file"] {
        padding: 5px;
    }

    small {
        display: block;
        margin-bottom: 20px;
        color: green;
    }
</style>

<div class="job-form-container">
    <h2>Create Job</h2>
    <small>@TempData["Message"]</small>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>



    @using (Html.BeginForm("Create", "Job", FormMethod.Post, new { enctype = "multipart/form-data", id = "jobForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.JobTitle)
            @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control", placeholder = "Enter Job Title" })
            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobDescription)
            @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control", rows = 4, placeholder = "Enter Job Description" })
            @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobLocation)
            @Html.TextBoxFor(model => model.JobLocation, new { @class = "form-control", placeholder = "Enter Job Location" })
            @Html.ValidationMessageFor(model => model.JobLocation, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department)
            @Html.TextBoxFor(model => model.Department, new { @class = "form-control", placeholder = "Enter Department" })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostedDate)
            @Html.TextBoxFor(model => model.PostedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(model => model.PostedDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfVacancy)
            @Html.TextBoxFor(model => model.NumberOfVacancy, new { @class = "form-control", placeholder = "Enter Number of Vacancies", type = "number" })
            @Html.ValidationMessageFor(model => model.NumberOfVacancy, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterviewMode)
            @Html.DropDownListFor(model => model.InterviewMode, new SelectList(new[] { "Online", "Walkin" }), "Select Interview Mode", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.InterviewMode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastDateToRegister)
            @Html.TextBoxFor(model => model.LastDateToRegister, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(model => model.LastDateToRegister, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobPosterImage)
            <input type="file" name="jobImage" class="form-control" />
            @Html.ValidationMessageFor(model => model.JobPosterImage, "", new { @class = "text-danger" })
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-primary">Save</button>
            <a href="@Url.Action("Index", "Job")" class="btn btn-secondary">Cancel</a>
        </div>
    }

    <script>
        $(document).ready(function () {
            $.validator.addMethod("regex", function (value, element, regexpr) {
                return this.optional(element) || regexpr.test(value);
            }, "Invalid format.");

            $("#jobForm").validate({
                rules: {
                    JobTitle: {
                        required: true,
                        minlength: 3
                    },
                    JobDescription: {
                        required: true,
                        minlength: 10
                    },
                    JobLocation: {
                        required: true,
                        regex: /^[a-zA-Z\s]+$/  // Only letters and spaces
                    },
                    Department: {
                        required: true,
                        regex: /^[a-zA-Z\s]+$/  // Only letters and spaces
                    },
                    PostedDate: {
                        required: true,
                        dateISO: true
                    },
                    NumberOfVacancy: {
                        required: true,
                        number: true,
                        min: 1
                    },
                    InterviewMode: {
                        required: true
                    },
                    LastDateToRegister: {
                        required: true,
                        dateISO: true
                    }
                },
                messages: {
                    JobTitle: {
                        minlength: "Job Title must be at least 3 characters long."
                    },
                    JobDescription: {
                        minlength: "Job Description must be at least 10 characters long."
                    },
                    JobLocation: {
                        regex: "Job Location must contain only letters and spaces."
                    },
                    Department: {
                        regex: "Department must contain only letters and spaces."
                    },
                    PostedDate: {
                        dateISO: "Please enter a valid date (yyyy-mm-dd)."
                    },
                    NumberOfVacancy: {
                        number: "Please enter a valid number.",
                        min: "Number of Vacancies must be at least 1."
                    },
                    LastDateToRegister: {
                        dateISO: "Please enter a valid date (yyyy-mm-dd)."
                    }
                },
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid");
                },
                onkeyup: false,  
                onfocusout: function (element) {
                    $(element).valid(); 
                }
            });
        });
    </script>


