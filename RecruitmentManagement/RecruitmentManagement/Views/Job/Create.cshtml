@model RecruitmentManagement.Models.JobPosting

@{
    ViewBag.Title = "Create Job Posting";
}

<h2>Create Job</h2>
<small>@TempData["Message"]</small>
@using (Html.BeginForm("Create", "Job", FormMethod.Post, new {enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.JobTitle)
        @Html.TextBoxFor(model => model.JobTitle, new { @class = "form-control", placeholder = "Enter Job Title" })
        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobDescription)
        @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control", rows = 4, placeholder = "Enter Job Description" })
        @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobLocation)
        @Html.TextBoxFor(model => model.JobLocation, new { @class = "form-control", placeholder = "Enter Job Location" })
        @Html.ValidationMessageFor(model => model.JobLocation, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department)
        @Html.TextBoxFor(model => model.Department, new { @class = "form-control", placeholder = "Enter Department" })
        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostedDate)
        @Html.TextBoxFor(model => model.PostedDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(model => model.PostedDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfVacancy)
        @Html.TextBoxFor(model => model.NumberOfVacancy, new { @class = "form-control", placeholder = "Enter Number of Vacancies", type = "number" })
        @Html.ValidationMessageFor(model => model.NumberOfVacancy, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InterviewMode)
        @Html.DropDownListFor(model => model.InterviewMode, new SelectList(new[] { "Online", "Walkin" }), "Select Interview Mode", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.InterviewMode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastDateToRegister)
        @Html.TextBoxFor(model => model.LastDateToRegister, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(model => model.LastDateToRegister, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JobPosterImage)
        <input type="file" name="jobImage" class="form-control" />
        @Html.ValidationMessageFor(model => model.JobPosterImage, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a href="@Url.Action("Index", "Job")" class="btn btn-secondary">Cancel</a>
}
