@model RecruitmentManagement.Models.Registeration

@{
    ViewBag.Title = "Register";

    Layout = "~/Views/Shared/layout.cshtml";
}
@Styles.Render("~/Content/Register.css")

@*<!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Register</title>
        <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
        @Styles.Render("~/Content/Register.css")
        <script src="~/Scripts/UserHomeRegister.js/registerform.js"></script>

    </head>
    <body>*@
<div class="registercontainer">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="RegisterForm">

            <h4>Register Here!</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", id = "FirstName" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new[] { "Male", "Female", "Other" }), "Select Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.State, new SelectList(new[] {
                                "Select State", "Andhra Pradesh", "Assam", "Bihar", "Delhi", "Goa", "Gujarat",
                                "Haryana", "Himachal Pradesh", "Karnataka", "Kerala", "Madhya Pradesh",
                                "Maharashtra", "Odisha", "Punjab", "Rajasthan", "Tamil Nadu", "Telangana",
                                "Uttar Pradesh", "West Bengal"
                            }), new { @class = "form-control", id = "state" })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    <select id="city" name="City" class="form-control">
                        <option value="">Select City</option>
                        <option value="Chennai">Chennai</option>
                        <option value="Coimbatore">Coimbatore</option>
                        <option value="Madurai">Madurai</option>
                        <option value="Tiruchirappalli">Tiruchirappalli</option>
                        <option value="Salem">Salem</option>
                        <option value="Tirunelveli">Tirunelveli</option>
                        <option value="Erode">Erode</option>
                        <option value="Vellore">Vellore</option>
                        <option value="Thoothukudi">Thoothukudi</option>
                        <option value="Nagercoil">Nagercoil</option>
                        <option value="Thanjavur">Thanjavur</option>
                        <option value="Dindigul">Dindigul</option>
                        <option value="Kanchipuram">Kanchipuram</option>
                        <option value="Karur">Karur</option>
                        <option value="Nagapattinam">Nagapattinam</option>
                        <option value="Cuddalore">Cuddalore</option>
                        <option value="Kumbakonam">Kumbakonam</option>
                        <option value="Tiruvannamalai">Tiruvannamalai</option>
                        <option value="Pudukkottai">Pudukkottai</option>
                        <option value="Hosur">Hosur</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            @* Hidden field for UserType *@
            @*  @Html.HiddenFor(model => model.UserType)*@



            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input type="submit" value="Register" class="btn btn-default" />
                </div>
            </div>
            <div>

                <p align="center">Already have an account? <a href="~/Account/Login">Login</a>
            </div>
        </div>
    }
</div>
<script src="~/Scripts/jquery-3.7.0.min.js"></script>

@Scripts.Render("~/Scripts/UserHomeRegister/registerform.js")
@*</body>
    </html>*@
